// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TP4.Data;

#nullable disable

namespace tp4.Migrations
{
    [DbContext(typeof(ExamenContext))]
    partial class ExamenContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("TP4.Models.Pregunta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Enunciado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OpcionA")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OpcionB")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OpcionC")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RespuestaCorrecta")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Preguntas");
                });

            modelBuilder.Entity("TP4.Models.RespuestaExamen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsCorrecta")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PreguntaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RespuestaDada")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ResultadoExamenId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PreguntaId");

                    b.HasIndex("ResultadoExamenId");

                    b.ToTable("Respuestas");
                });

            modelBuilder.Entity("TP4.Models.ResultadoExamen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CantidadCorrectas")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreAlumno")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("NotaFinal")
                        .HasColumnType("REAL");

                    b.Property<int>("TotalPreguntas")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Resultados");
                });

            modelBuilder.Entity("TP4.Models.RespuestaExamen", b =>
                {
                    b.HasOne("TP4.Models.Pregunta", "Pregunta")
                        .WithMany("Respuestas")
                        .HasForeignKey("PreguntaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TP4.Models.ResultadoExamen", "ResultadoExamen")
                        .WithMany("Respuestas")
                        .HasForeignKey("ResultadoExamenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pregunta");

                    b.Navigation("ResultadoExamen");
                });

            modelBuilder.Entity("TP4.Models.Pregunta", b =>
                {
                    b.Navigation("Respuestas");
                });

            modelBuilder.Entity("TP4.Models.ResultadoExamen", b =>
                {
                    b.Navigation("Respuestas");
                });
#pragma warning restore 612, 618
        }
    }
}
